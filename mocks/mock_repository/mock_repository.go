// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\I\Desktop\work\shortlink\internal\repository\repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddLink mocks base method.
func (m *MockRepository) AddLink(link string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddLink", link)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddLink indicates an expected call of AddLink.
func (mr *MockRepositoryMockRecorder) AddLink(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLink", reflect.TypeOf((*MockRepository)(nil).AddLink), link)
}

// GetLink mocks base method.
func (m *MockRepository) GetLink(shortLink string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLink", shortLink)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLink indicates an expected call of GetLink.
func (mr *MockRepositoryMockRecorder) GetLink(shortLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLink", reflect.TypeOf((*MockRepository)(nil).GetLink), shortLink)
}

// GetShortLink mocks base method.
func (m *MockRepository) GetShortLink(link string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShortLink", link)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShortLink indicates an expected call of GetShortLink.
func (mr *MockRepositoryMockRecorder) GetShortLink(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShortLink", reflect.TypeOf((*MockRepository)(nil).GetShortLink), link)
}
